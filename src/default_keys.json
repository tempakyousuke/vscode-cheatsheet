// Overwrite key bindings by placing them into your key bindings file.
[{
        "key": "escape escape",
        "command": "workbench.action.exitZenMode",
        "when": "inZenMode",
        "comment": "禅モードを終了させる"
    },
    {
        "key": "shift+escape",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek",
        "comment": "検索窓を閉じる"
    },
    {
        "key": "escape",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek",
        "comment": "検索窓を閉じる"
    },
    {
        "key": "shift+escape",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus",
        "comment": "選択状態を解除"
    },
    {
        "key": "escape",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus",
        "comment": "選択状態を解除"
    },
    {
        "key": "ctrl+end",
        "command": "cursorBottom",
        "when": "textInputFocus",
        "comment": "最下部に移動"
    },
    {
        "key": "ctrl+shift+end",
        "command": "cursorBottomSelect",
        "when": "textInputFocus",
        "comment": "現在位置から最下部までを選択"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus",
        "comment": "矩形選択で下に選択位置を伸ばす"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "cursorColumnSelectLeft",
        "when": "textInputFocus",
        "comment": "矩形選択で左に選択位置を伸ばす"
    },
    {
        "key": "ctrl+shift+alt+pagedown",
        "command": "cursorColumnSelectPageDown",
        "when": "textInputFocus",
        "comment": "最後の行まで一気に矩形選択"
    },
    {
        "key": "ctrl+shift+alt+pageup",
        "command": "cursorColumnSelectPageUp",
        "when": "textInputFocus",
        "comment": "最初の行まで一気に矩形選択"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "cursorColumnSelectRight",
        "when": "textInputFocus",
        "comment": "矩形選択で右に選択位置を伸ばす"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "cursorColumnSelectUp",
        "when": "textInputFocus",
        "comment": "矩形選択で左に選択位置を伸ばす"
    },
    {
        "key": "down",
        "command": "cursorDown",
        "when": "textInputFocus",
        "comment": "下に移動"
    },
    {
        "key": "ctrl+shift+down",
        "command": "cursorDownSelect",
        "when": "textInputFocus",
        "comment": "下に選択範囲を広げる"
    },
    {
        "key": "shift+down",
        "command": "cursorDownSelect",
        "when": "textInputFocus",
        "comment": "下に選択範囲を広げる"
    },
    {
        "key": "end",
        "command": "cursorEnd",
        "when": "textInputFocus",
        "comment": "行末に移動"
    },
    {
        "key": "shift+end",
        "command": "cursorEndSelect",
        "when": "textInputFocus",
        "comment": "行末まで選択"
    },
    {
        "key": "home",
        "command": "cursorHome",
        "when": "textInputFocus",
        "comment": "行頭まで移動"
    },
    {
        "key": "shift+home",
        "command": "cursorHomeSelect",
        "when": "textInputFocus",
        "comment": "行頭まで選択"
    },
    {
        "key": "left",
        "command": "cursorLeft",
        "when": "textInputFocus",
        "comment": "カーソルを左に移動"
    },
    {
        "key": "shift+left",
        "command": "cursorLeftSelect",
        "when": "textInputFocus",
        "comment": "左に選択範囲を伸ばす"
    },
    {
        "key": "pagedown",
        "command": "cursorPageDown",
        "when": "textInputFocus",
        "comment": "1ページ下に移動"
    },
    {
        "key": "shift+pagedown",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus",
        "comment": "1ページ下に選択範囲を広げる"
    },
    {
        "key": "pageup",
        "command": "cursorPageUp",
        "when": "textInputFocus",
        "comment": "1ページ上に移動"
    },
    {
        "key": "shift+pageup",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus",
        "comment": "1ページ上に選択範囲を広げる"
    },
    {
        "key": "right",
        "command": "cursorRight",
        "when": "textInputFocus",
        "comment": "右に移動"
    },
    {
        "key": "shift+right",
        "command": "cursorRightSelect",
        "when": "textInputFocus",
        "comment": "右に選択範囲を伸ばす"
    },
    {
        "key": "ctrl+home",
        "command": "cursorTop",
        "when": "textInputFocus",
        "comment": "ファイルの先頭に移動"
    },
    {
        "key": "ctrl+shift+home",
        "command": "cursorTopSelect",
        "when": "textInputFocus",
        "comment": "ファイルの先頭まで選択範囲を広げる"
    },
    {
        "key": "up",
        "command": "cursorUp",
        "when": "textInputFocus",
        "comment": "上に移動"
    },
    {
        "key": "ctrl+shift+up",
        "command": "cursorUpSelect",
        "when": "textInputFocus",
        "comment": "選択範囲を上に伸ばす"
    },
    {
        "key": "shift+up",
        "command": "cursorUpSelect",
        "when": "textInputFocus",
        "comment": "選択範囲を上に伸ばす"
    },
    {
        "key": "shift+backspace",
        "command": "deleteLeft",
        "when": "textInputFocus && !editorReadonly",
        "comment": "左の文字を削除"
    },
    {
        "key": "backspace",
        "command": "deleteLeft",
        "when": "textInputFocus && !editorReadonly",
        "comment": "左の文字を削除"
    },
    {
        "key": "delete",
        "command": "deleteRight",
        "when": "textInputFocus && !editorReadonly",
        "comment": "右の文字を削除"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.selectAll",
        "when": "textInputFocus",
        "comment": "すべて選択"
    },
    {
        "key": "ctrl+i",
        "command": "expandLineSelection",
        "when": "textInputFocus",
        "comment": "行を選択（連続で実行すると次の行に選択範囲を拡大）"
    },
    {
        "key": "shift+tab",
        "command": "outdent",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus",
        "comment": "アウトデント（字下げを戻す）"
    },
    {
        "key": "ctrl+shift+z",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly",
        "comment": "やり直し"
    },
    {
        "key": "ctrl+y",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly",
        "comment": "やり直し"
    },
    {
        "key": "ctrl+down",
        "command": "scrollLineDown",
        "when": "textInputFocus",
        "comment": "一行下にスクロール"
    },
    {
        "key": "ctrl+up",
        "command": "scrollLineUp",
        "when": "textInputFocus",
        "comment": "一行上にスクロール"
    },
    {
        "key": "alt+pagedown",
        "command": "scrollPageDown",
        "when": "textInputFocus",
        "comment": "一ページ下にスクロール"
    },
    {
        "key": "alt+pageup",
        "command": "scrollPageUp",
        "when": "textInputFocus",
        "comment": "一ページ上にスクロール"
    },
    {
        "key": "tab",
        "command": "tab",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus",
        "comment": "tabを入力"
    },
    {
        "key": "ctrl+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly",
        "comment": "元に戻す"
    },
    {
        "key": "shift+escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus",
        "comment": "複数カーソルがある状態を解除"
    },
    {
        "key": "escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus",
        "comment": "複数カーソルがある状態を解除"
    },
    {
        "key": "right",
        "command": "repl.action.acceptSuggestion",
        "when": "inDebugRepl && suggestWidgetVisible && textInputFocus",
        "comment": "提案ウィジェットが出ているときにウィジェット内にフォーカスを移す"
    },
    {
        "key": "ctrl+f",
        "command": "actions.find",
        "comment": "検索"
    },
    {
        "key": "enter",
        "command": "breakpointWidget.action.acceptInput",
        "when": "breakpointWidgetVisible && inBreakpointWidget",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "closeReviewPanel",
        "when": "reviewPanelVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "closeReviewPanel",
        "when": "reviewPanelVisible",
        "comment": ""
    },
    {
        "key": "ctrl+u",
        "command": "cursorUndo",
        "when": "textInputFocus",
        "comment": "元の位置に移動"
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordEndRight",
        "when": "textInputFocus",
        "comment": "単語の最後に移動"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus",
        "comment": "単語の最後まで選択範囲を拡大"
    },
    {
        "key": "ctrl+left",
        "command": "cursorWordStartLeft",
        "when": "textInputFocus",
        "comment": "単語の最初に移動"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordStartLeftSelect",
        "when": "textInputFocus",
        "comment": "単語の最初まで選択範囲を拡大"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly",
        "comment": "単語の先頭まで削除"
    },
    {
        "key": "ctrl+delete",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly",
        "comment": "単語の末尾まで削除"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus",
        "comment": "選択している文字列と同じ文字列を次々に選択"
    },
    {
        "key": "shift+alt+a",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+insert",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus",
        "comment": ""
    },
    {
        "key": "shift+delete",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly",
        "comment": "カット"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "shift+insert",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+oem_2",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly",
        "comment": "行を下に複製"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly",
        "comment": "行を上に複製"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'",
        "comment": "keybinding.jsonを編集しているとき、設定を記述するのを助けてくれる"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly",
        "comment": "行を削除"
    },
    {
        "key": "f7",
        "command": "editor.action.diffReview.next",
        "when": "isInDiffEditor",
        "comment": "gitのdiffとか見てるときに次の差分箇所に移動"
    },
    {
        "key": "shift+f7",
        "command": "editor.action.diffReview.prev",
        "when": "isInDiffEditor",
        "comment": ""
    },
    {
        "key": "alt+f3",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+f3",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.extensioneditor.showfind",
        "when": "extensionEditorWebviewFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly",
        "comment": "選択範囲を整形する"
    },
    {
        "key": "f12",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
        "comment": ""
    },
    {
        "key": "ctrl+f12",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_comma",
        "command": "editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+oem_6",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+i",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus",
        "comment": "選択中の各行の最後にカーソルを作成"
    },
    {
        "key": "ctrl+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_5",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "f8",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "shift+f8",
        "command": "editor.action.marker.prevInFiles",
        "when": "editorFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "f3",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "ctrl+f3",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "ctrl+k f12",
        "command": "editor.action.openDeclarationToTheSide",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
        "comment": ""
    },
    {
        "key": "shift+alt+o",
        "command": "editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/",
        "comment": ""
    },
    {
        "key": "ctrl+oem_4",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+shift+f12",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor",
        "comment": ""
    },
    {
        "key": "alt+f12",
        "command": "editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "comment": ""
    },
    {
        "key": "shift+f3",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "ctrl+shift+f3",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "ctrl+oem_period",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+shift+r",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "shift+f12",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "f2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "alt+f1",
        "command": "editor.action.showAccessibilityHelp",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "shift+f10",
        "command": "editor.action.showContextMenu",
        "when": "textInputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+right",
        "command": "editor.action.smartSelect.grow",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+left",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+h",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.toggleTabFocusMode"
    },
    {
        "key": "alt+z",
        "command": "editor.action.toggleWordWrap"
    },
    {
        "key": "ctrl+shift+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewEditorFocus && webviewFindWidgetVisible",
        "comment": ""
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.webvieweditor.selectAll",
        "when": "webviewEditorFocus",
        "comment": ""
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "webviewEditorFocus",
        "comment": ""
    },
    {
        "key": "f7",
        "command": "editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights",
        "comment": ""
    },
    {
        "key": "shift+f7",
        "command": "editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode",
        "comment": ""
    },
    {
        "key": "f9",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "tab",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "editor.fold",
        "when": "editorTextFocus",
        "comment": "fold"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus",
        "comment": "すべてfold"
    },
    {
        "key": "ctrl+k ctrl+oem_2",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus",
        "comment": "ブロックコメントをすべてfold"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus",
        "comment": "すべてのMarkerRegionをfold"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus",
        "comment": "字下げの階層が1段階の部分をfold(現在カーソルがある部分はfoldされない)"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus",
        "comment": "字下げの階層が2段階の部分をfold(現以下略"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus",
        "comment": "字下げの階層が3段階の部分をfold(現以下略"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus",
        "comment": "字下げの階層が4段階の部分をfold(現以下略"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus",
        "comment": "字下げの階層が5段階の部分をfold(現以下略"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus",
        "comment": "字下げの階層が6段階の部分をfold(現以下略"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus",
        "comment": "字下げの階層が7段階の部分をfold(現以下略"
    },
    {

        "key": "ctrl+k ctrl+oem_4",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus",
        "comment": "現在の位置から下の階層の部分を各字下げ箇所でfold"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "editor.unfold",
        "when": "editorTextFocus",
        "comment": "現在の位置でfold解除"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus",
        "comment": "すべてfold解除"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus",
        "comment": "すべてのMarkerRegionのfoldを解除"
    },
    {
        "key": "ctrl+k ctrl+oem_6",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus",
        "comment": "現在の位置の下の階層をすべてfold解除"
    },
    {
        "key": "tab",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode",
        "comment": ""
    },
    {
        "key": "ctrl+enter",
        "command": "openReferenceToSide",
        "when": "referenceSearchTreeFocused && referenceSearchVisible",
        "comment": ""
    },
    {
        "key": "enter",
        "command": "repl.action.acceptInput",
        "when": "inDebugRepl && textInputFocus",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsSearch",
        "comment": ""
    },
    {
        "key": "ctrl+oem_period",
        "command": "settings.action.editFocusedSetting",
        "when": "inSettingsSearch",
        "comment": ""
    },
    {
        "key": "enter",
        "command": "settings.action.focusNextSetting",
        "when": "inSettingsSearch",
        "comment": ""
    },
    {
        "key": "shift+enter",
        "command": "settings.action.focusPreviousSetting",
        "when": "inSettingsSearch",
        "comment": ""
    },
    {
        "key": "down",
        "command": "settings.action.focusSettingsFile",
        "when": "inSettingsSearch && !suggestWidgetVisible",
        "comment": ""
    },
    {
        "key": "ctrl+f",
        "command": "settings.action.search",
        "when": "inSettingsEditor",
        "comment": ""
    },
    {
        "key": "alt+f5",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+f5",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible",
        "comment": ""
    },
    {
        "key": "ctrl+alt+enter",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible",
        "comment": ""
    },
    {
        "key": "ctrl+shift+1",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible",
        "comment": ""
    },
    {
        "key": "alt+enter",
        "command": "editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible",
        "comment": ""
    },
    {
        "key": "alt+c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "alt+l",
        "command": "toggleFindInSelection",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "alt+r",
        "command": "toggleFindRegex",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "alt+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus",
        "comment": ""
    },
    {
        "key": "tab",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "editorTextFocus && hasNextTabstop && inSnippetMode",
        "comment": ""
    },
    {
        "key": "shift+tab",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "editorTextFocus && hasPrevTabstop && inSnippetMode",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "leaveEditorMessage",
        "when": "messageVisible",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "closeDirtyDiff",
        "when": "dirtyDiffVisible",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible",
        "comment": ""
    },
    {
        "key": "f4",
        "command": "goToNextReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor",
        "comment": ""
    },
    {
        "key": "shift+f4",
        "command": "goToPreviousReferenceFromEmbeddedEditor",
        "when": "inReferenceSearchEditor",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible",
        "comment": ""
    },
    {
        "key": "alt+down",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "comment": ""
    },
    {
        "key": "down",
        "command": "showNextParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "comment": ""
    },
    {
        "key": "alt+up",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "comment": ""
    },
    {
        "key": "up",
        "command": "showPrevParameterHint",
        "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "comment": ""
    },
    {
        "key": "tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus",
        "comment": "選択中の提案ウィジェットを決定"
    },
    {
        "key": "enter",
        "command": "acceptSelectedSuggestionOnEnter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus",
        "comment": "選択中の提案ウィジェットを決定"
    },
    {
        "key": "shift+escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus",
        "comment": "提案ウィジェットを隠す"
    },
    {
        "key": "escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus",
        "comment": "提案ウィジェットを隠す"
    },
    {
        "key": "ctrl+pagedown",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "pagedown",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+pageup",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "pageup",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+space",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+alt+space",
        "command": "toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus",
        "comment": ""
    },
    {
        "key": "enter",
        "command": "acceptRenameInput",
        "when": "editorFocus && renameInputVisible",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_1",
        "command": "breadcrumbs.focus",
        "comment": "パンくずにフォーカス"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "breadcrumbs.focusAndSelect",
        "comment": "パンくずにフォーカスして現在地を開いた状態にする"
    },
    {
        "key": "ctrl+right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくず上で右に移動"
    },
    {
        "key": "right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくず上で右に移動"
    },
    {
        "key": "ctrl+left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくず上で左に移動"
    },
    {
        "key": "left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくず上で左に移動"
    },
    {
        "key": "ctrl+enter",
        "command": "breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくずを開いて現在開いているファイルの場所をフォーカスさせる"
    },
    {
        "key": "space",
        "command": "breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくずを開いて現在開いているファイルの場所をフォーカスさせる"
    },
    {
        "key": "ctrl+enter",
        "command": "breadcrumbs.revealFocusedFromTreeAside",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "down",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくずを開く"
    },
    {
        "key": "enter",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": "パンくずを開く"
    },
    {
        "key": "shift+escape",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus",
        "comment": "エディタにフォーカスを移す"
    },
    {
        "key": "escape",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus",
        "comment": "エディタにフォーカスを移す"
    },
    {
        "key": "escape",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "shift+alt+c",
        "command": "copyFilePath",
        "when": "!editorFocus",
        "comment": "ファイルの絶対パスをコピー"
    },
    {
        "key": "ctrl+k ctrl+alt+c",
        "command": "copyRelativeFilePath",
        "when": "!editorFocus",
        "comment": "プロジェクト名 • ファイルの相対パス　の形でコピー"
    },
    {
        "key": "alt+enter",
        "command": "debug.openBreakpointToSide",
        "when": "breakpointsFocused",
        "comment": ""
    },
    {
        "key": "ctrl+enter",
        "command": "debug.openBreakpointToSide",
        "when": "breakpointsFocused",
        "comment": ""
    },
    {
        "key": "delete",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointSelected",
        "comment": ""
    },
    {
        "key": "delete",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected",
        "comment": ""
    },
    {
        "key": "shift+f9",
        "command": "editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+enter",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus",
        "comment": "ファイルを画面を分割して開く"
    },
    {
        "key": "alt+down",
        "command": "history.showNext",
        "when": "historyNavigationEnabled && historyNavigationWidget",
        "comment": ""
    },
    {
        "key": "down",
        "command": "history.showNext",
        "when": "historyNavigationEnabled && historyNavigationWidget",
        "comment": ""
    },
    {
        "key": "alt+up",
        "command": "history.showPrevious",
        "when": "historyNavigationEnabled && historyNavigationWidget",
        "comment": ""
    },
    {
        "key": "up",
        "command": "history.showPrevious",
        "when": "historyNavigationEnabled && historyNavigationWidget",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch",
        "comment": ""
    },
    {
        "key": "ctrl+c",
        "command": "keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "keybindings.editor.defineKeybinding",
        "when": "inKeybindings && keybindingFocus",
        "comment": ""
    },
    {
        "key": "down",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch",
        "comment": ""
    },
    {
        "key": "delete",
        "command": "keybindings.editor.removeKeybinding",
        "when": "inKeybindings && keybindingFocus",
        "comment": ""
    },
    {
        "key": "ctrl+f",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings && keybindingFocus",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "list.clear",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "left",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "right",
        "command": "list.expand",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "shift+down",
        "command": "list.expandSelectionDown",
        "when": "listFocus && listSupportsMultiselect && !inputFocus",
        "comment": ""
    },
    {
        "key": "shift+up",
        "command": "list.expandSelectionUp",
        "when": "listFocus && listSupportsMultiselect && !inputFocus",
        "comment": ""
    },
    {
        "key": "down",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "home",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "end",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "pagedown",
        "command": "list.focusPageDown",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "pageup",
        "command": "list.focusPageUp",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "up",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+a",
        "command": "list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus",
        "comment": ""
    },
    {
        "key": "space",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus",
        "comment": ""
    },
    {
        "key": "delete",
        "command": "notification.clear",
        "when": "notificationFocus",
        "comment": ""
    },
    {
        "key": "left",
        "command": "notification.collapse",
        "when": "notificationFocus",
        "comment": ""
    },
    {
        "key": "right",
        "command": "notification.expand",
        "when": "notificationFocus",
        "comment": ""
    },
    {
        "key": "enter",
        "command": "notification.toggle",
        "when": "notificationFocus",
        "comment": ""
    },
    {
        "key": "space",
        "command": "notification.toggle",
        "when": "notificationFocus",
        "comment": ""
    },
    {
        "key": "home",
        "command": "notifications.focusFirstToast",
        "when": "notificationFocus && notificationToastsVisible",
        "comment": ""
    },
    {
        "key": "pageup",
        "command": "notifications.focusFirstToast",
        "when": "notificationFocus && notificationToastsVisible",
        "comment": ""
    },
    {
        "key": "end",
        "command": "notifications.focusLastToast",
        "when": "notificationFocus && notificationToastsVisible",
        "comment": ""
    },
    {
        "key": "pagedown",
        "command": "notifications.focusLastToast",
        "when": "notificationFocus && notificationToastsVisible",
        "comment": ""
    },
    {
        "key": "down",
        "command": "notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible",
        "comment": ""
    },
    {
        "key": "up",
        "command": "notifications.focusPreviousToast",
        "when": "notificationFocus && notificationToastsVisible",
        "comment": ""
    },
    {
        "key": "down",
        "command": "outline.focusDownHighlighted",
        "when": "outlineFiltered && outlineFocused",
        "comment": ""
    },
    {
        "key": "up",
        "command": "outline.focusUpHighlighted",
        "when": "outlineFiltered && outlineFocused",
        "comment": ""
    },
    {
        "key": "ctrl+c",
        "command": "problems.action.copy",
        "when": "problemFocus",
        "comment": ""
    },
    {
        "key": "ctrl+enter",
        "command": "problems.action.openToSide",
        "when": "problemFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+r",
        "command": "revealFileInOS",
        "when": "!editorFocus",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus",
        "comment": ""
    },
    {
        "key": "ctrl+c",
        "command": "search.action.copyMatch",
        "when": "fileMatchOrMatchFocus",
        "comment": ""
    },
    {
        "key": "shift+alt+c",
        "command": "search.action.copyPath",
        "when": "fileMatchOrFolderMatchFocus",
        "comment": ""
    },
    {
        "key": "f4",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult",
        "comment": ""
    },
    {
        "key": "shift+f4",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult",
        "comment": ""
    },
    {
        "key": "ctrl+up",
        "command": "search.action.focusSearchFromResults",
        "when": "firstMatchFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+enter",
        "command": "search.action.openResultToSide",
        "when": "fileMatchOrMatchFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "delete",
        "command": "search.action.remove",
        "when": "fileMatchOrMatchFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+alt+enter",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible",
        "comment": ""
    },
    {
        "key": "ctrl+shift+enter",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && replaceActive && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+shift+enter",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && replaceActive && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+down",
        "command": "search.focus.nextInputBox",
        "when": "inputBoxFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+up",
        "command": "search.focus.previousInputBox",
        "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus",
        "comment": ""
    },
    {
        "key": "down",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible",
        "comment": ""
    },
    {
        "key": "enter",
        "command": "settings.action.focusSettingsList",
        "when": "inSettingsEditor && settingsTocRowFocus",
        "comment": ""
    },
    {
        "key": "shift+f9",
        "command": "settings.action.showContextMenu",
        "when": "inSettingsEditor",
        "comment": ""
    },
    {
        "key": "alt+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchInputBoxFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "alt+r",
        "command": "toggleSearchRegex",
        "when": "searchInputBoxFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+f4",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k w",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k f",
        "command": "workbench.action.closeFolder"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups",
        "comment": ""
    },
    {
        "key": "ctrl+f4",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+k u",
        "command": "workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups",
        "comment": ""
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "alt+f5",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible",
        "comment": ""
    },
    {
        "key": "shift+alt+f5",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible",
        "comment": ""
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode",
        "comment": ""
    },
    {
        "key": "f6",
        "command": "workbench.action.debug.pause",
        "when": "inDebugMode",
        "comment": ""
    },
    {
        "key": "ctrl+shift+f5",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode",
        "comment": ""
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.debug.run",
        "when": "!inDebugMode",
        "comment": ""
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode",
        "comment": ""
    },
    {
        "key": "shift+f11",
        "command": "workbench.action.debug.stepOut",
        "when": "inDebugMode",
        "comment": ""
    },
    {
        "key": "f10",
        "command": "workbench.action.debug.stepOver",
        "when": "inDebugMode",
        "comment": ""
    },
    {
        "key": "shift+f5",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode",
        "comment": ""
    },
    {
        "key": "ctrl+k m",
        "command": "workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+k p",
        "command": "workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFile"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openFolder"
    },
    {
        "key": "ctrl+k r",
        "command": "workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+k s",
        "command": "workbench.action.files.saveAll"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+k o",
        "command": "workbench.action.files.showOpenedFileInNewWindow"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "escape",
        "command": "workbench.action.hideInterfaceOverview",
        "when": "interfaceOverviewVisible",
        "comment": ""
    },
    {
        "key": "down",
        "command": "workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "comment": ""
    },
    {
        "key": "up",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "comment": ""
    },
    {
        "key": "pagedown",
        "command": "workbench.action.interactivePlayground.pageDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "comment": ""
    },
    {
        "key": "pageup",
        "command": "workbench.action.interactivePlayground.pageUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+k enter",
        "command": "workbench.action.keepEditor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "alt+0",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+k down",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k right",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k up",
        "command": "workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "shift+alt+1",
        "command": "workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "shift+alt+9",
        "command": "workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "alt+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "alt+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "alt+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+oem_comma",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "ctrl+shift+u",
        "command": "workbench.action.output.toggleOutput"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible",
        "comment": ""
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "workbench.action.selectTheme"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "f1",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+oem_5",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible",
        "comment": ""
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected",
        "comment": ""
    },
    {
        "key": "ctrl+backspace",
        "command": "workbench.action.terminal.deleteWordLeft",
        "when": "terminalFocus",
        "comment": "単語の先頭まで削除"
    },
    {
        "key": "ctrl+delete",
        "command": "workbench.action.terminal.deleteWordRight",
        "when": "terminalFocus",
        "comment": "単語の末尾まで削除"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "alt+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "alt+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetVisible && terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "shift+pagedown",
        "command": "workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+end",
        "command": "workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+home",
        "command": "workbench.action.terminal.scrollToTop",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "shift+pageup",
        "command": "workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+oem_5",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+oem_3",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "shift+alt+0",
        "command": "workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "f11",
        "command": "workbench.action.toggleFullScreen"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+win+w",
        "command": "workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+k z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+numpad_add",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+numpad0",
        "command": "workbench.action.zoomReset"
    },
    {
        "key": "ctrl+shift+m",
        "command": "workbench.actions.view.problems"
    },
    {
        "key": "ctrl+shift+y",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "workbench.extensions.action.showRecommendedKeymapExtensions"
    },
    {
        "key": "ctrl+k c",
        "command": "workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+k d",
        "command": "workbench.files.action.compareWithSaved"
    },
    {
        "key": "ctrl+k e",
        "command": "workbench.files.action.focusOpenEditorsView"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.view.extensions"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "comment": ""
    },
    {
        "key": "f11",
        "command": "workbench.action.debug.stepInto",
        "when": "inDebugMode",
        "comment": ""
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus",
        "comment": ""
    },
    {
        "key": "f2",
        "command": "debug.renameWatchExpression",
        "when": "watchExpressionsFocused",
        "comment": ""
    },
    {
        "key": "f2",
        "command": "debug.setVariable",
        "when": "variablesFocused",
        "comment": ""
    },
    {
        "key": "space",
        "command": "debug.toggleBreakpoint",
        "when": "breakpointsFocused && !inputFocus",
        "comment": ""
    },
    {
        "key": "shift+delete",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "comment": "ファイルを完全に削除"
    },
    {
        "key": "ctrl+c",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus",
        "comment": "ファイルをコピー"
    },
    {
        "key": "ctrl+v",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus",
        "comment": "コピーしたファイルをペースト"
    },
    {
        "key": "delete",
        "command": "moveFileToTrash",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "comment": "ファイルをゴミ箱に移動"
    },
    {
        "key": "f2",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "comment": "ファイル名変更"
    },
    {
        "key": "shift+escape",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek",
        "comment": ""
    },
    {
        "key": "f4",
        "command": "goToNextReference",
        "when": "referenceSearchVisible",
        "comment": ""
    },
    {
        "key": "shift+f4",
        "command": "goToPreviousReference",
        "when": "referenceSearchVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "notifications.hideList",
        "when": "notificationCenterVisible",
        "comment": ""
    },
    {
        "key": "escape",
        "command": "notifications.hideToasts",
        "when": "notificationToastsVisible",
        "comment": ""
    },
    {
        "key": "alt+left",
        "command": "workbench.action.quickInputBack",
        "when": "inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker",
        "comment": ""
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker",
        "comment": ""
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "comment": ""
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker",
        "comment": ""
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
        "when": "inQuickOpen && inViewsPicker",
        "comment": ""
    },
    {
        "key": "ctrl+f4",
        "command": "extension.node-debug.pickLoadedScript",
        "when": "debugType == 'node'",
        "comment": ""
    },
    {
        "key": "ctrl+f4",
        "command": "extension.node-debug.pickLoadedScript",
        "when": "debugType == 'node2'",
        "comment": ""
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown.showPreview",
        "when": "editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+k v",
        "command": "markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+alt+k",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+b",
        "command": "markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+r l",
        "command": "npm-script.showOutput"
    },
    {
        "key": "alt+u p",
        "command": "uiflow.openPreviewSideBySide"
    },
    {
        "key": "ctrl+alt+l",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+i",
        "command": "markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+r shift+r",
        "command": "npm-script.run"
    },
    {
        "key": "alt+u s",
        "command": "uiflow.exportSVG"
    },
    {
        "key": "ctrl+alt+j",
        "command": "bookmarks.jumpToPrevious",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "alt+s",
        "command": "markdown.extension.editing.toggleStrikethrough",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+r r",
        "command": "npm-script.rerun-last-script"
    },
    {
        "key": "alt+u n",
        "command": "uiflow.openExport"
    },
    {
        "key": "shift+alt+k",
        "command": "bookmarks.shrinkSelection",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "markdown.extension.editing.toggleHeadingUp",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+r shift+x",
        "command": "npm-script.terminate-script"
    },
    {
        "key": "alt+u e",
        "command": "uiflow.openExport"
    },
    {
        "key": "shift+alt+l",
        "command": "bookmarks.expandSelectionToNext",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "markdown.extension.editing.toggleHeadingDown",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+r t",
        "command": "npm-script.test"
    },
    {
        "key": "shift+alt+j",
        "command": "bookmarks.expandSelectionToPrevious",
        "when": "editorTextFocus",
        "comment": ""
    },
    {
        "key": "ctrl+m",
        "command": "markdown.extension.editing.toggleMath",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "enter",
        "command": "markdown.extension.onEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+enter",
        "command": "markdown.extension.onCtrlEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "shift+enter",
        "command": "markdown.extension.onShiftEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "tab",
        "command": "markdown.extension.onTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "shift+tab",
        "command": "markdown.extension.onShiftTabKey",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "backspace",
        "command": "markdown.extension.onBackspaceKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "alt+up",
        "command": "markdown.extension.onMoveLineUp",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "alt+down",
        "command": "markdown.extension.onMoveLineDown",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "shift+alt+up",
        "command": "markdown.extension.onCopyLineUp",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "shift+alt+down",
        "command": "markdown.extension.onCopyLineDown",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+oem_6",
        "command": "markdown.extension.onIndentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+oem_4",
        "command": "markdown.extension.onOutdentLines",
        "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "alt+c",
        "command": "markdown.extension.checkTaskList",
        "when": "editorTextFocus && editorLangId == 'markdown'",
        "comment": ""
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown.extension.togglePreview",
        "when": "!terminalFocus",
        "comment": ""
    },
    {
        "key": "ctrl+k v",
        "command": "markdown.extension.togglePreviewToSide",
        "when": "!terminalFocus",
        "comment": ""
    }
]


// Here are other available commands:
// - HookyQR.beautify
// - HookyQR.beautifyFile
// - acceptSnippet
// - actions.findWithSelection
// - addRootFolder
// - bookmarks.clear
// - bookmarks.clearFromAllFiles
// - bookmarks.clearFromFile
// - bookmarks.deleteBookmark
// - bookmarks.jumpTo
// - bookmarks.list
// - bookmarks.listFromAllFiles
// - bookmarks.refresh
// - bookmarks.selectLines
// - bookmarks.toggleLabeled
// - breadcrumbs.toggle
// - columnSelect
// - compareFiles
// - compareSelected
// - compositionEnd
// - compositionStart
// - createCursor
// - cursorLineEnd
// - cursorLineStart
// - cursorWordEndLeft
// - cursorWordEndLeftSelect
// - cursorWordLeft
// - cursorWordLeftSelect
// - cursorWordPartLeft
// - cursorWordPartLeftSelect
// - cursorWordPartRight
// - cursorWordPartRightSelect
// - cursorWordPartStartLeft
// - cursorWordPartStartLeftSelect
// - cursorWordRight
// - cursorWordRightSelect
// - cursorWordStartRight
// - cursorWordStartRightSelect
// - cut
// - debug.addConfiguration
// - debug.enableOrDisableBreakpoint
// - debug.installAdditionalDebuggers
// - default:compositionEnd
// - default:compositionStart
// - default:cut
// - default:paste
// - default:redo
// - default:replacePreviousChar
// - default:type
// - default:undo
// - deleteAllLeft
// - deleteAllRight
// - deleteWordEndLeft
// - deleteWordEndRight
// - deleteWordPartLeft
// - deleteWordPartRight
// - deleteWordStartLeft
// - deleteWordStartRight
// - dev.stats.loader
// - editor.action.addSelectionToPreviousFindMatch
// - editor.action.clearoutput
// - editor.action.clipboardCopyWithSyntaxHighlightingAction
// - editor.action.codeAction
// - editor.action.detectIndentation
// - editor.action.findReferences
// - editor.action.fontZoomIn
// - editor.action.fontZoomOut
// - editor.action.fontZoomReset
// - editor.action.format
// - editor.action.goToTypeDefinition
// - editor.action.indentUsingSpaces
// - editor.action.indentUsingTabs
// - editor.action.indentationToSpaces
// - editor.action.indentationToTabs
// - editor.action.insertSnippet
// - editor.action.inspectTMScopes
// - editor.action.joinLines
// - editor.action.marker.next
// - editor.action.marker.prev
// - editor.action.moveCarretLeftAction
// - editor.action.moveCarretRightAction
// - editor.action.moveSelectionToPreviousFindMatch
// - editor.action.nextCommentThreadAction
// - editor.action.openLink
// - editor.action.peekTypeDefinition
// - editor.action.reindentlines
// - editor.action.reindentselectedlines
// - editor.action.selectToBracket
// - editor.action.showSnippets
// - editor.action.sortLinesAscending
// - editor.action.sortLinesDescending
// - editor.action.sourceAction
// - editor.action.toggleMinimap
// - editor.action.toggleRenderControlCharacter
// - editor.action.toggleRenderWhitespace
// - editor.action.transformToLowercase
// - editor.action.transformToUppercase
// - editor.action.transpose
// - editor.action.transposeLetters
// - editor.debug.action.conditionalBreakpoint
// - editor.debug.action.goToNextBreakpoint
// - editor.debug.action.goToPreviousBreakpoint
// - editor.debug.action.runToCursor
// - editor.debug.action.selectionToRepl
// - editor.debug.action.selectionToWatch
// - editor.debug.action.toggleLogPoint
// - editor.emmet.action.balanceIn
// - editor.emmet.action.balanceOut
// - editor.emmet.action.decrementNumberByOne
// - editor.emmet.action.decrementNumberByOneTenth
// - editor.emmet.action.decrementNumberByTen
// - editor.emmet.action.evaluateMathExpression
// - editor.emmet.action.incrementNumberByOne
// - editor.emmet.action.incrementNumberByOneTenth
// - editor.emmet.action.incrementNumberByTen
// - editor.emmet.action.matchTag
// - editor.emmet.action.mergeLines
// - editor.emmet.action.nextEditPoint
// - editor.emmet.action.prevEditPoint
// - editor.emmet.action.reflectCSSValue
// - editor.emmet.action.removeTag
// - editor.emmet.action.selectNextItem
// - editor.emmet.action.selectPrevItem
// - editor.emmet.action.splitJoinTag
// - editor.emmet.action.toggleComment
// - editor.emmet.action.updateImageSize
// - editor.emmet.action.updateTag
// - editor.emmet.action.wrapIndividualLinesWithAbbreviation
// - editor.emmet.action.wrapWithAbbreviation
// - emmet.expandAbbreviation
// - explorer.newFile
// - explorer.newFolder
// - extension.node-debug.toggleAutoAttach
// - filesExplorer.findInFolder
// - filesExplorer.findInWorkspace
// - git._syncAll
// - git.branch
// - git.checkout
// - git.clean
// - git.cleanAll
// - git.clone
// - git.close
// - git.commit
// - git.commitAll
// - git.commitAllAmend
// - git.commitAllSigned
// - git.commitStaged
// - git.commitStagedAmend
// - git.commitStagedSigned
// - git.commitWithInput
// - git.createTag
// - git.deleteBranch
// - git.fetch
// - git.ignore
// - git.init
// - git.merge
// - git.openChange
// - git.openFile
// - git.openFile2
// - git.openHEADFile
// - git.openRepository
// - git.openResource
// - git.publish
// - git.pull
// - git.pullFrom
// - git.pullRebase
// - git.push
// - git.pushTo
// - git.pushWithTags
// - git.refresh
// - git.renameBranch
// - git.revertChange
// - git.revertSelectedRanges
// - git.showOutput
// - git.stage
// - git.stageAll
// - git.stageChange
// - git.stageSelectedRanges
// - git.stash
// - git.stashIncludeUntracked
// - git.stashPop
// - git.stashPopLatest
// - git.sync
// - git.syncRebase
// - git.undoCommit
// - git.unstage
// - git.unstageAll
// - git.unstageSelectedRanges
// - javascript.goToProjectConfig
// - javascript.reloadProjects
// - js.projectStatus.command
// - keybindings.editor.copyCommandKeybindingEntry
// - keybindings.editor.resetKeybinding
// - keybindings.editor.showConflicts
// - lastCursorLineSelect
// - lastCursorLineSelectDrag
// - lastCursorWordSelect
// - layoutEditorGroups
// - lineBreakInsert
// - list.focusFirstChild
// - list.focusLastChild
// - markdown.extension.editing.toggleCodeSpan
// - markdown.extension.editing.toggleUnorderedList
// - markdown.extension.printToHtml
// - markdown.extension.toc.create
// - markdown.extension.toc.update
// - markdown.preview.refresh
// - markdown.preview.toggleLock
// - markdown.showLockedPreviewToSide
// - markdown.showPreviewSecuritySelector
// - markdown.showSource
// - merge-conflict.accept.all-both
// - merge-conflict.accept.all-current
// - merge-conflict.accept.all-incoming
// - merge-conflict.accept.both
// - merge-conflict.accept.current
// - merge-conflict.accept.incoming
// - merge-conflict.accept.selection
// - merge-conflict.compare
// - merge-conflict.next
// - merge-conflict.previous
// - notifications.clearAll
// - notifications.focusToasts
// - notifications.showList
// - notifications.toggleList
// - npm-script.audit
// - npm-script.build
// - npm-script.install
// - npm-script.installInOutputWindow
// - npm-script.start
// - npm-script.uninstallInOutputWindow
// - npm-script.validate
// - npm.debugScript
// - npm.debugScriptFromHover
// - npm.openScript
// - npm.refresh
// - npm.runInstall
// - npm.runScript
// - npm.runScriptFromHover
// - npm.runSelectedScript
// - openInTerminal
// - outline.focus
// - paste
// - problems.action.copyMessage
// - problems.action.copyRelatedInformationMessage
// - removeRootFolder
// - repl.action.copyAll
// - replacePreviousChar
// - revealInExplorer
// - saveAll
// - search.action.clearHistory
// - search.action.clearSearchResults
// - search.action.collapseSearchResults
// - search.action.copyAll
// - search.action.focusSearchList
// - search.action.refreshSearchResults
// - search.action.toggleSearchViewPosition
// - selectAll
// - selectFirstSuggestion
// - selectForCompare
// - selectLastSuggestion
// - setContext
// - setSelection
// - toggle.diff.editorMode
// - toggleEscapeSequenceLogging
// - tslint.createConfig
// - tslint.fixAllProblems
// - tslint.showOutputChannel
// - type
// - typescript.goToProjectConfig
// - typescript.openTsServerLog
// - typescript.reloadProjects
// - typescript.restartTsServer
// - typescript.selectTypeScriptVersion
// - update.showCurrentReleaseNotes
// - workbench.action.acceptSelectedQuickOpenItem
// - workbench.action.addRootFolder
// - workbench.action.appPerf
// - workbench.action.clearCommandHistory
// - workbench.action.clearEditorHistory
// - workbench.action.clearRecentFiles
// - workbench.action.closeEditorsAndGroup
// - workbench.action.closeEditorsInOtherGroups
// - workbench.action.closeEditorsToTheLeft
// - workbench.action.closeEditorsToTheRight
// - workbench.action.closeOtherEditors
// - workbench.action.closePanel
// - workbench.action.configureLanguageBasedSettings
// - workbench.action.configureLocale
// - workbench.action.debug.configure
// - workbench.action.debug.disconnect
// - workbench.action.debug.selectandstart
// - workbench.action.debug.terminateThread
// - workbench.action.decreaseViewSize
// - workbench.action.duplicateWorkspaceInNewWindow
// - workbench.action.editor.changeEOL
// - workbench.action.editor.changeEncoding
// - workbench.action.editorLayoutSingle
// - workbench.action.editorLayoutThreeColumns
// - workbench.action.editorLayoutThreeRows
// - workbench.action.editorLayoutTwoByTwoGrid
// - workbench.action.editorLayoutTwoColumns
// - workbench.action.editorLayoutTwoColumnsBottom
// - workbench.action.editorLayoutTwoRows
// - workbench.action.editorLayoutTwoRowsRight
// - workbench.action.evenEditorWidths
// - workbench.action.files.openFileFolderInNewWindow
// - workbench.action.files.openFileInNewWindow
// - workbench.action.files.openFolderInNewWindow
// - workbench.action.files.revert
// - workbench.action.files.saveFiles
// - workbench.action.firstEditorInGroup
// - workbench.action.focusActiveEditorGroup
// - workbench.action.focusLastEditorGroup
// - workbench.action.focusNextGroup
// - workbench.action.focusPanel
// - workbench.action.focusPreviousGroup
// - workbench.action.focusQuickOpen
// - workbench.action.generateColorTheme
// - workbench.action.increaseViewSize
// - workbench.action.inspectContextKeys
// - workbench.action.inspectKeyMappings
// - workbench.action.joinAllGroups
// - workbench.action.joinTwoGroups
// - workbench.action.maximizeEditor
// - workbench.action.minimizeOtherEditors
// - workbench.action.moveEditorToAboveGroup
// - workbench.action.moveEditorToBelowGroup
// - workbench.action.moveEditorToLeftGroup
// - workbench.action.moveEditorToRightGroup
// - workbench.action.navigateDown
// - workbench.action.navigateEditorGroups
// - workbench.action.navigateLast
// - workbench.action.navigateLeft
// - workbench.action.navigateRight
// - workbench.action.navigateUp
// - workbench.action.newGroupAbove
// - workbench.action.newGroupBelow
// - workbench.action.newGroupLeft
// - workbench.action.newGroupRight
// - workbench.action.nextEditorInGroup
// - workbench.action.openActiveLogOutputFile
// - workbench.action.openDefaultKeybindingsFile
// - workbench.action.openDocumentationUrl
// - workbench.action.openEditorAtIndex
// - workbench.action.openFolderSettings
// - workbench.action.openGlobalKeybindingsFile
// - workbench.action.openGlobalSettings
// - workbench.action.openIntroductoryVideosUrl
// - workbench.action.openIssueReporter
// - workbench.action.openLicenseUrl
// - workbench.action.openLogFile
// - workbench.action.openLogViewer
// - workbench.action.openLogsFolder
// - workbench.action.openNextRecentlyUsedEditor
// - workbench.action.openPreviousEditorFromHistory
// - workbench.action.openPreviousRecentlyUsedEditor
// - workbench.action.openPrivacyStatementUrl
// - workbench.action.openProcessExplorer
// - workbench.action.openRawDefaultSettings
// - workbench.action.openRequestFeatureUrl
// - workbench.action.openSettings2
// - workbench.action.openSettingsJson
// - workbench.action.openSnippets
// - workbench.action.openTipsAndTricksUrl
// - workbench.action.openTwitterUrl
// - workbench.action.openView
// - workbench.action.openWorkspace
// - workbench.action.openWorkspaceConfigFile
// - workbench.action.openWorkspaceInNewWindow
// - workbench.action.openWorkspaceSettings
// - workbench.action.previousEditorInGroup
// - workbench.action.problems.focus
// - workbench.action.quickOpenNavigateNext
// - workbench.action.quickOpenNavigateNextInTerminalPicker
// - workbench.action.quickOpenNavigatePrevious
// - workbench.action.quickOpenNavigatePreviousInTerminalPicker
// - workbench.action.quickOpenPreviousEditor
// - workbench.action.quickOpenRecent
// - workbench.action.quickOpenSelectNext
// - workbench.action.quickOpenSelectPrevious
// - workbench.action.quickOpenTerm
// - workbench.action.quickPickManyToggle
// - workbench.action.quickSwitchWindow
// - workbench.action.quit
// - workbench.action.reloadWindow
// - workbench.action.reloadWindowWithExtensionsDisabled
// - workbench.action.removeFromEditorHistory
// - workbench.action.removeRootFolder
// - workbench.action.reportPerformanceIssueUsingReporter
// - workbench.action.revertAndCloseActiveEditor
// - workbench.action.saveWorkspaceAs
// - workbench.action.selectIconTheme
// - workbench.action.setLogLevel
// - workbench.action.showAboutDialog
// - workbench.action.showEditorsInActiveGroup
// - workbench.action.showEditorsInGroup
// - workbench.action.showEmmetCommands
// - workbench.action.showErrorsWarnings
// - workbench.action.showInteractivePlayground
// - workbench.action.showInterfaceOverview
// - workbench.action.showLogs
// - workbench.action.showRuntimeExtensions
// - workbench.action.showWelcomePage
// - workbench.action.splitEditorDown
// - workbench.action.splitEditorLeft
// - workbench.action.splitEditorRight
// - workbench.action.splitEditorUp
// - workbench.action.switchWindow
// - workbench.action.tasks.configureDefaultBuildTask
// - workbench.action.tasks.configureDefaultTestTask
// - workbench.action.tasks.configureTaskRunner
// - workbench.action.tasks.restartTask
// - workbench.action.tasks.runTask
// - workbench.action.tasks.showLog
// - workbench.action.tasks.showTasks
// - workbench.action.tasks.terminate
// - workbench.action.tasks.test
// - workbench.action.terminal.allowWorkspaceShell
// - workbench.action.terminal.disallowWorkspaceShell
// - workbench.action.terminal.focus
// - workbench.action.terminal.focusAtIndex1
// - workbench.action.terminal.focusAtIndex2
// - workbench.action.terminal.focusAtIndex3
// - workbench.action.terminal.focusAtIndex4
// - workbench.action.terminal.focusAtIndex5
// - workbench.action.terminal.focusAtIndex6
// - workbench.action.terminal.focusAtIndex7
// - workbench.action.terminal.focusAtIndex8
// - workbench.action.terminal.focusAtIndex9
// - workbench.action.terminal.focusNext
// - workbench.action.terminal.focusPrevious
// - workbench.action.terminal.kill
// - workbench.action.terminal.moveToLineEnd
// - workbench.action.terminal.moveToLineStart
// - workbench.action.terminal.newInActiveWorkspace
// - workbench.action.terminal.rename
// - workbench.action.terminal.resizePaneDown
// - workbench.action.terminal.resizePaneLeft
// - workbench.action.terminal.resizePaneRight
// - workbench.action.terminal.resizePaneUp
// - workbench.action.terminal.runActiveFile
// - workbench.action.terminal.runSelectedText
// - workbench.action.terminal.scrollToNextCommand
// - workbench.action.terminal.scrollToPreviousCommand
// - workbench.action.terminal.selectAll
// - workbench.action.terminal.selectDefaultShell
// - workbench.action.terminal.selectToNextCommand
// - workbench.action.terminal.selectToNextLine
// - workbench.action.terminal.selectToPreviousCommand
// - workbench.action.terminal.selectToPreviousLine
// - workbench.action.terminal.splitInActiveWorkspace
// - workbench.action.toggleActivityBarVisibility
// - workbench.action.toggleAutoSave
// - workbench.action.toggleCenteredLayout
// - workbench.action.toggleDevTools
// - workbench.action.toggleMaximizedPanel
// - workbench.action.toggleMenuBar
// - workbench.action.toggleMultiCursorModifier
// - workbench.action.togglePanelPosition
// - workbench.action.toggleSharedProcess
// - workbench.action.toggleSidebarPosition
// - workbench.action.toggleStatusbarVisibility
// - workbench.action.url.openUrl
// - workbench.action.webview.openDeveloperTools
// - workbench.action.webview.reloadWebviewAction
// - workbench.debug.action.focusBreakpointsView
// - workbench.debug.action.focusCallStackView
// - workbench.debug.action.focusRepl
// - workbench.debug.action.focusVariablesView
// - workbench.debug.action.focusWatchView
// - workbench.debug.panel.action.clearReplAction
// - workbench.debug.viewlet.action.addFunctionBreakpointAction
// - workbench.debug.viewlet.action.disableAllBreakpoints
// - workbench.debug.viewlet.action.enableAllBreakpoints
// - workbench.debug.viewlet.action.reapplyBreakpointsAction
// - workbench.debug.viewlet.action.removeAllBreakpoints
// - workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations
// - workbench.extensions.action.addToWorkspaceFolderRecommendations
// - workbench.extensions.action.addToWorkspaceIgnoredRecommendations
// - workbench.extensions.action.addToWorkspaceRecommendations
// - workbench.extensions.action.checkForUpdates
// - workbench.extensions.action.configureWorkspaceFolderRecommendedExtensions
// - workbench.extensions.action.configureWorkspaceRecommendedExtensions
// - workbench.extensions.action.disableAll
// - workbench.extensions.action.disableAllWorkspace
// - workbench.extensions.action.disableAutoUpdate
// - workbench.extensions.action.enableAll
// - workbench.extensions.action.enableAllWorkspace
// - workbench.extensions.action.enableAutoUpdate
// - workbench.extensions.action.installExtensions
// - workbench.extensions.action.installVSIX
// - workbench.extensions.action.listBuiltInExtensions
// - workbench.extensions.action.listOutdatedExtensions
// - workbench.extensions.action.openExtensionsFolder
// - workbench.extensions.action.reinstall
// - workbench.extensions.action.showAzureExtensions
// - workbench.extensions.action.showDisabledExtensions
// - workbench.extensions.action.showEnabledExtensions
// - workbench.extensions.action.showExtensionsForLanguage
// - workbench.extensions.action.showExtensionsWithIds
// - workbench.extensions.action.showInstalledExtensions
// - workbench.extensions.action.showLanguageExtensions
// - workbench.extensions.action.showPopularExtensions
// - workbench.extensions.action.showRecommendedExtensions
// - workbench.extensions.action.updateAllExtensions
// - workbench.files.action.acceptLocalChanges
// - workbench.files.action.collapseExplorerFolders
// - workbench.files.action.compareFileWith
// - workbench.files.action.focusFilesExplorer
// - workbench.files.action.refreshFilesExplorer
// - workbench.files.action.revertLocalChanges
// - workbench.files.action.saveAllInGroup
// - workbench.files.action.showActiveFileInExplorer
// - workbench.output.action.clearOutput
// - workbench.view.extension.bookmarks
// - workbench.view.extension.sftp
// - workbench.view.extension.test